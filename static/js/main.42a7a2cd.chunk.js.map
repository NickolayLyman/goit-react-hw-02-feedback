{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","App.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","leaveFeedback","Object","keys","map","key","className","st","btn","type","id","onClick","e","slice","toUpperCase","toLowerCase","Notification","propTypes","message","PropTypes","string","isRequired","Notfication","title","Section","children","Statistics","good","neutral","bad","total","positivePercentage","list","listItem","itemText","text","App","state","feedbackHandler","setState","prevState","btnId","target","feedbackCounter","values","reduce","acc","value","positivePercentageCounter","Math","round","this","totalAmount","wrapper","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42a7a2cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__iDaUr\",\"listItem\":\"Statistics_listItem__1DlAj\",\"itemText\":\"Statistics_itemText__1DUam\",\"text\":\"Statistics_text__2SA_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__fDWLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__19H86\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3F5iq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3FmAD\"};","import PropTypes from 'prop-types';\r\nimport st from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, leaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {Object.keys(options).map(key => (\r\n        <button\r\n          className={st.btn}\r\n          key={key}\r\n          type=\"button\"\r\n          id={key}\r\n          onClick={e => leaveFeedback(e)}\r\n        >\r\n          {key.slice(0, 1).toUpperCase() + key.slice(1).toLowerCase()}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  leaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport st from './Notification.module.css';\r\n\r\nconst Notfication = ({ message }) => {\r\n  return <h2 className={st.title}>{message}</h2>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notfication;\r\n","import PropTypes from 'prop-types';\r\nimport st from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h1 className={st.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport st from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul className={st.list}>\r\n      <li className={st.listItem}>\r\n        <p className={st.itemText}>\r\n          Good:<span className={st.text}>{good}</span>\r\n        </p>\r\n      </li>\r\n      <li className={st.listItem}>\r\n        <p className={st.itemText}>\r\n          Neutral:<span className={st.text}>{neutral}</span>\r\n        </p>\r\n      </li>\r\n      <li className={st.listItem}>\r\n        <p className={st.itemText}>\r\n          Bad:<span className={st.text}>{bad}</span>\r\n        </p>\r\n      </li>\r\n      <li className={st.listItem}>\r\n        <p className={st.itemText}>\r\n          Total:<span className={st.text}>{total}</span>\r\n        </p>\r\n      </li>\r\n      <li className={st.listItem}>\r\n        <p className={st.itemText}>\r\n          Positive feedback:\r\n          <span className={st.text}>{positivePercentage}%</span>\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\n\nimport st from './App.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackHandler = e => {\n    this.setState(prevState => {\n      const btnId = e.target.id;\n      return { [btnId]: prevState[btnId] + 1 };\n    });\n  };\n\n  feedbackCounter = () =>\n    Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  positivePercentageCounter = () => {\n    return Math.round((100 / this.feedbackCounter()) * this.state.good);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalAmount = this.feedbackCounter();\n\n    return (\n      <div className={st.wrapper}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            leaveFeedback={this.feedbackHandler}\n          />\n        </Section>\n        <Section title=\"Statistic\">\n          {totalAmount === 0 && <Notification message=\"No feedback given\" />}\n          {totalAmount > 0 && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalAmount}\n              positivePercentage={this.positivePercentageCounter()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}